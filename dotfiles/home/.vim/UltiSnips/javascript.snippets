#
# React
#

snippet cc "createClass" b
var ${1:`!p snip.rv = re.sub('\.react$', '', snip.basename or 'ModuleName')`} = React.createClass({
	render: function() {
		$0
	}
});

module.exports = $1;
endsnippet

snippet cdm "componentDidMount" b
componentDidMount: function() {
	$0
},
endsnippet

snippet cdu "componentDidUpdate" b
componentDidUpdate: function(prevProps, prevState) {
	$0
},
endsnippet

snippet cwm "componentWillMount" b
componentWillMount: function() {
	$0
},
endsnippet

snippet cwrp "componentWillReceiveProps" b
componentWillReceiveProps: function(nextProps) {
	$0
},
endsnippet

snippet cwum "componentWillUnmount" b
componentWillUnmount: function() {
	$0
},
endsnippet

snippet cwu "componentWillUpdate" b
componentWillUpdate: function(nextProps, nextState) {
	$0
},
endsnippet

snippet gdp "getDefaultProps" b
getDefaultProps: function() {
	return {
		$0
	};
},
endsnippet

snippet gis "getInitialState" b
getInitialState: function() {
	return {
		$0
	};
},
endsnippet

snippet scu "shouldComponentUpdate" b
shouldComponentUpdate: function(nextProps, nextState) {
	return ${1:true};
},
endsnippet

#
# console methods
#

snippet dir "console.dir"
console.dir(${1});
endsnippet

snippet log "console.log"
console.log(${1});
endsnippet

#
# ES6
#

snippet import "import declaration" b
import ${1:module} from '$3${2:$1}$4';
endsnippet

snippet import* "import all declaration" b
import * as ${1:module} from '$3${2:$1}$4';
endsnippet

snippet import{ "import {} declaration" b
import \{$1\} from '$2';
endsnippet

#
# other
#

snippet ** "docblock" b
/**
 * ${1}
 */
endsnippet

snippet fun "function" !
function${1: name}(${2:arg}) {
	$0
}
endsnippet

snippet pm "@providesModule declaration" b
/**
 * Copyright 2004-present Facebook. All Rights Reserved.
 *
 * @providesModule ${1:`!p snip.rv = snip.basename or 'ModuleName'`}
 */

${2:'use strict';

}$0
endsnippet

snippet req "require" !b
var ${1:ModuleName} = require('$1${2}');
endsnippet

snippet esen "eslint enable"
/* eslint-enable $0*/
endsnippet

snippet esdis "eslint disable"
/* eslint-disable $0*/
endsnippet

snippet esline "eslint disable line"
// eslint-disable-line $0
endsnippet
