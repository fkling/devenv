# default shell
set -g default-shell "${SHELL}"

# make it use C-a like GNU screen
unbind C-b
set -g prefix C-a
set-window-option -g mode-keys vi

# bindings:
# - to see current bindings:
#   list-keys -t {vi,emacs}-{edit,choice,copy}
bind a send-prefix

# open new/split panes with the path of the current pane
unbind c
bind c new-window -c '#{pane_current_path}'
unbind %
bind % split-window -h -c '#{pane_current_path}'
unbind '"'
bind '"' split-window -v -c '#{pane_current_path}'

# Move between windows
bind -n M-} next-window
bind -n M-{ previous-window

# Vim-like key bindings for pane navigation (default uses cursor keys)
unbind h
bind h select-pane -L
unbind j
bind j select-pane -D
unbind k
bind k select-pane -U
unbind l # normally used for last-window
bind l select-pane -R

# without prefix
bind -n M-H select-pane -L
bind -n M-J select-pane -D
bind -n M-K select-pane -U
bind -n M-L select-pane -R

# resizing (mouse also works)
unbind Left
bind -r Left resize-pane -L 5
unbind Right
bind -r Right resize-pane -R 5
unbind Down
bind -r Down resize-pane -D 5
unbind Up
bind -r Up resize-pane -U 5

# fast toggle (normally prefix-l)
bind ^a last-window

# intuitive window-splitting keys
bind | split-window -h -c '#{pane_current_path}' # normally prefix-%
bind \ split-window -h -c '#{pane_current_path}' # normally prefix-%
bind - split-window -v -c '#{pane_current_path}' # normally prefix-"

# status bar
set -g status-bg black
set -g status-fg white
set -g status-left-length 40
set -g status-left '#[fg=yellow]#S â§‰ '
set -g status-right '#[fg=yellow]#(whoami)@#h'

# automatically renumber window numbers on closing a pane (tmux >= 1.7)
set -g renumber-windows on

# highlight active window
set -w -g window-status-current-bg red

set -g mouse on

# Check if copy-mode or any mouse flags, then send mouse events
# or check if we're in alternate screen end send navigation keys (up, down)
bind -n WheelUpPane if-shell -Ft= '#{?pane_in_mode,1,#{mouse_any_flag}}' \
        'send -Mt=' 'if-shell -Ft= "#{alternate_on}" \
        "send -t= Up" "copy-mode -et="'
bind -n WheelDownPane if-shell -Ft = '#{?pane_in_mode,1,#{mouse_any_flag}}' \
        'send -Mt=' 'if-shell -Ft= "#{alternate_on}" \
        "send -t= Down" "send -Mt="'

# slightly more useful width in "main-vertical" layout; enough room for 3-digit
# line number gutter in Vim + 80 columns of text + 1 column breathing room
# (default looks to be about 79)
set -w -g main-pane-width 85

set -g default-terminal "screen-256color"

set -g history-limit 262144

# start window and pane numbering at 1, (0 is too hard to reach)
set -g base-index 1
set -g pane-base-index 1

# don't wait for an escape sequence after seeing C-a
set -s escape-time 0

# dynamically update iTerm tab and window titles
set -g set-titles on

# needed as on tmux 1.9 and up (defaults to off)
# added in tmux commit c7a121cfc0137c907b7bfb
set -g focus-events on

# but don't change tmux's own window titles
set -w -g automatic-rename off

# #T      = standard window title (last command, see ~/.bash_profile)
# #h      = short hostname
# #S      = session name
# #W      = tmux window name
# (would love to include #(pwd) here as well, but that would only print the
# current working directory relative to the session -- ie. always the starting
# cwd -- which is not very interesting)
set -g set-titles-string "#T : #h > #S > #W"

# Clipper
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "nc localhost 8377"
